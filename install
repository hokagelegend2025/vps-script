#!/bin/bash

# --- VARIBEL YANG PERLU DIKONFIGURASI ---
YOUR_DOMAIN="11.hokageyoutube.my.id"  # Ganti dengan domain Anda
SSH_USERNAME="hokage"                 # Ganti dengan username SSH yang Anda inginkan
SSH_PASSWORD="legend"                 # Ganti dengan password SSH (DIREKOMENDASIKAN MENGGUNAKAN SSH KEY!)
                                     # Jika Anda tidak ingin password di sini, hapus baris ini dan
                                     # ganti perintah useradd dengan "sudo useradd -m -s /bin/bash ${SSH_USERNAME}"
                                     # Lalu tambahkan SSH Key secara manual.

SSH_TUNNEL_PORT=443                  # Port Nginx untuk tunneling SSH (umumnya 443 dengan SSL)
SSH_INTERNAL_PORT=22                 # Port SSH server (default 22)

# --- FUNGSI LOGGING ---
log_info() {
    echo -e "\e[32m[INFO] $1\e[0m"
}

log_warn() {
    echo -e "\e[33m[WARN] $1\e[0m"
}

log_error() {
    echo -e "\e[31m[ERROR] $1\e[0m"
    exit 1
}

# --- CEK HAK AKSES ROOT ---
if [[ $EUID -ne 0 ]]; then
   log_error "Skrip ini harus dijalankan sebagai root atau dengan sudo."
fi

log_info "Memulai proses instalasi dan konfigurasi SSH Tunneling..."

# --- 1. UPDATE SISTEM ---
log_info "Memperbarui sistem..."
sudo apt update || log_error "Gagal memperbarui daftar paket."
sudo apt upgrade -y || log_error "Gagal mengupgrade paket."

# --- 2. INSTALASI OPENSSH SERVER ---
log_info "Memeriksa dan menginstal OpenSSH Server..."
sudo apt install openssh-server -y || log_error "Gagal menginstal OpenSSH Server."
sudo systemctl enable ssh || log_error "Gagal mengaktifkan SSH di startup."
sudo systemctl start ssh || log_error "Gagal memulai SSH."

# --- 3. INSTALASI NGINX ---
log_info "Memeriksa dan menginstal Nginx..."
sudo apt install nginx -y || log_error "Gagal menginstal Nginx."
sudo systemctl enable nginx || log_error "Gagal mengaktifkan Nginx di startup."
sudo systemctl start nginx || log_error "Gagal memulai Nginx."

# --- 4. INSTALASI CERTBOT (untuk SSL/TLS) ---
log_info "Memeriksa dan menginstal Certbot untuk SSL/TLS..."
sudo snap install core --classic || log_error "Gagal menginstal snap core."
sudo snap refresh core || log_error "Gagal refresh snap core."
sudo snap install --classic certbot || log_error "Gagal menginstal Certbot snap."
sudo ln -sf /snap/bin/certbot /usr/bin/certbot || log_warn "Gagal membuat symlink Certbot, mungkin sudah ada."

# --- 5. KONFIGURASI NGINX (Stream dan HTTP) ---
log_info "Mengkonfigurasi Nginx untuk SSH Tunneling dan HTTP..."

# Buat file konfigurasi Nginx utama
NGINX_CONF_PATH="/etc/nginx/nginx.conf"
NGINX_SSH_STREAM_CONF="/etc/nginx/conf.d/ssh_stream.conf" # File terpisah untuk stream

# Backup konfigurasi Nginx yang ada
if [ -f "$NGINX_CONF_PATH" ]; then
    sudo cp "$NGINX_CONF_PATH" "${NGINX_CONF_PATH}.bak.$(date +%Y%m%d%H%M%S)"
    log_info "Backup $NGINX_CONF_PATH berhasil."
fi

# Edit nginx.conf untuk menyertakan stream block
# Tambahkan 'include /etc/nginx/conf.d/*.conf;' di dalam stream block jika ingin modular
sudo sed -i '/^http {/i\
stream {\
    map $ssl_preread_server_name $name {\
        '$YOUR_DOMAIN' ssh_backend;\
        default                       backend_default;\
    }\
\
    upstream ssh_backend {\
        server 127.0.0.1:'$SSH_INTERNAL_PORT';\
    }\
\
    upstream backend_default {\
        server 127.0.0.1:8080;\
    }\
\
    server {\
        listen '$SSH_TUNNEL_PORT' ssl;\
        listen [::]:'$SSH_TUNNEL_PORT' ssl;\
\
        ssl_preread on;\
        proxy_pass $name;\
\
        # Placeholder untuk sertifikat SSL, akan diganti oleh Certbot\
        ssl_certificate /etc/letsencrypt/live/'$YOUR_DOMAIN'/fullchain.pem;\
        ssl_certificate_key /etc/letsencrypt/live/'$YOUR_DOMAIN'/privkey.pem;\
\
        ssl_protocols TLSv1.2 TLSv1.3;\
        ssl_ciphers 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256';\
        ssl_prefer_server_ciphers on;\
    }\
}\
' "$NGINX_CONF_PATH"

# Buat konfigurasi HTTP default
DEFAULT_HTTP_CONF="/etc/nginx/sites-available/default"
if [ ! -f "$DEFAULT_HTTP_CONF.bak" ]; then
    sudo cp "$DEFAULT_HTTP_CONF" "${DEFAULT_HTTP_CONF}.bak"
fi

sudo cat <<EOF > "$DEFAULT_HTTP_CONF"
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;

    server_name $YOUR_DOMAIN;

    location / {
        try_files \$uri \$uri/ =404;
    }
}
EOF

sudo ln -sf "$DEFAULT_HTTP_CONF" /etc/nginx/sites-enabled/default

# --- 6. DAPATKAN SERTIFIKAT SSL DENGAN CERTBOT ---
log_info "Mendapatkan sertifikat SSL untuk $YOUR_DOMAIN..."
sudo certbot --nginx -d "$YOUR_DOMAIN" --non-interactive --agree-tos --email your_email@example.com # Ganti email Anda

# Verifikasi Nginx Config setelah Certbot
sudo nginx -t || log_error "Nginx konfigurasi error setelah Certbot. Periksa log!"

# --- 7. BUAT PENGGUNA SSH BARU (Opsional) ---
log_info "Membuat pengguna SSH baru '$SSH_USERNAME'..."
if id "$SSH_USERNAME" &>/dev/null; then
    log_warn "Pengguna '$SSH_USERNAME' sudah ada, melewati pembuatan pengguna."
else
    # Membuat pengguna dan mengatur password
    # CATATAN: Mengatur password di skrip tidak aman untuk produksi!
    # Lebih baik gunakan SSH Key atau biarkan pengguna membuat password pertama kali.
    sudo useradd -m -s /bin/bash "$SSH_USERNAME" || log_error "Gagal membuat pengguna SSH."
    echo "$SSH_USERNAME:$SSH_PASSWORD" | sudo chpasswd || log_error "Gagal mengatur password pengguna SSH."
    log_info "Pengguna '$SSH_USERNAME' dengan password '$SSH_PASSWORD' berhasil dibuat."
fi

# --- 8. KONFIGURASI FIREWALL (UFW) ---
log_info "Mengkonfigurasi firewall (UFW)..."
sudo apt install ufw -y || log_warn "Gagal menginstal UFW, mungkin sudah terinstal."
sudo ufw allow OpenSSH || log_warn "Gagal mengizinkan OpenSSH di UFW."
sudo ufw allow http || log_warn "Gagal mengizinkan HTTP di UFW."
sudo ufw allow https || log_warn "Gagal mengizinkan HTTPS di UFW."
sudo ufw allow "$SSH_TUNNEL_PORT"/tcp comment "SSH Tunnel Port" || log_warn "Gagal mengizinkan SSH Tunnel Port di UFW."
echo "y" | sudo ufw enable || log_warn "Gagal mengaktifkan UFW, mungkin sudah aktif."
log_info "Firewall UFW telah dikonfigurasi. Pastikan AWS Security Groups juga diatur."

# --- 9. RESTART LAYANAN ---
log_info "Mulai ulang Nginx dan SSH untuk menerapkan perubahan..."
sudo systemctl restart nginx || log_error "Gagal memulai ulang Nginx."
sudo systemctl restart ssh || log_error "Gagal memulai ulang SSH."

log_info "Instalasi dan konfigurasi SSH Tunneling Selesai!"
log_info "Informasi Koneksi:"
log_info "  Domain: $YOUR_DOMAIN"
log_info "  Port Tunneling: $SSH_TUNNEL_PORT"
log_info "  Username SSH: $SSH_USERNAME"
log_info "  Password SSH: $SSH_PASSWORD (Jika diatur via skrip)"
log_info "Pastikan AWS Security Groups mengizinkan traffic masuk ke port $SSH_TUNNEL_PORT (dan 80, 22 jika diperlukan)."
log_info "Sekarang Anda bisa mencoba menghubungkan HTTP Custom/DarkTunnel dengan setting ini."
